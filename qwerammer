// Qwerammer - Qwerty for the (shell) programmer
// This is the Qwerty version of Colegrammer.
// <http://repura.livejournal.com/tag/colegrammer>

// Notes on Colegrammer:
//
// This layout inherits the great letter key arrangement from Colemak
// <http://colemak.com> (by Shai Coleman) while trying to fix the mess which is
// the symbol key arrangement from Qwerty. Furthermore, it also tries to prevent
// the user from ever having to move his hands to reach for a key.
//
// The idea that a programmer will type numbers less often than symbols was
// imported from Programmer Dvorak <http://www.kaufmann.no/roland/dvorak/> (by
// Roland Kaufman), but Colegrammer tries to accomplish this in quite a
// different manner. Instead of level 2 (shifted) positions, the numbers were
// arranged in group 2 (mod3ed) positions, on the right hand alone, to prevent
// the constant jumping between the right and left shift keys you get with
// ProDvo. On the left side, group 2 got the arrow and navigation keys.

// This work belongs to the public domain.

// To install locally (no root privileges):
//
// Copy this file to a handy location (notice you need to place it inside a
// directory called symbols):
//
// $ mkdir -p "$HOME/.xkb/symbols"
// $ mv qwerammer "$HOME/.xkb/symbols"
//
// Now load it with:
// 
// $ setxkbmap -I"$HOME/.xkb" qwerammer -print | xkbcomp -w 0 -I"$HOME/.xkb" - "$DISPLAY" && xset r 66 -r 21 -r 49 -r 135

// System wide installation:
//
// Copy this file to your X11/xkb/symbols/ dir (mine is
// /usr/share/X11/xkb/symbols/), and run
//
// $ setxkbmap qwerammer && xset r 66 -r 21 -r 49 -r 135

// For future reference:
//  66 == <CAPS> -> backspace
//  21 == <AE12> -> right alt
//  49 == <TLDE> -> left alt
// 135 == <MENU> -> right control

default partial alphanumeric_keys
xkb_symbols "qwerammer" {
    include "us(basic)"
    include "qwerammer(modifiers)"

    name[Group1]= "Letters, symbols, i18n";
    name[Group2]= "Numbers and crap";

    // symbol row, left side
    // TLDE = alt, see modifiers
    key <AE01> {
        [ braceleft, percent ],
	[ VoidSymbol ]
    };
    key <AE02> {
        [ bracketleft, less ],
	[ VoidSymbol ]
    };
    key <AE03> {
        [ backslash, exclam ],
        [ Home ]
    };
    key <AE04> {
        [ parenleft, asciicircum ],
        [ End ]
    };
    key <AE05> {
        [ bar, ampersand ],
	[ VoidSymbol ]
    };

    // unused
    key <AE06> {
        [ VoidSymbol, VoidSymbol ],
	[ VoidSymbol ]
    };

    // symbol row, right side
    key <AE07> {
        [ asterisk, at ],
	[ asterisk ]
    };
    key <AE08> {
        [ parenright, asciitilde ],
	[ VoidSymbol ]
    };
    key <AE09> {
        [ slash, question ],
	[ VoidSymbol ]
    };
    key <AE10> {
        [ bracketright, greater, oslash, Ooblique ],
	[ VoidSymbol ]
    };
    key <AE11> {
        [ braceright, grave ],
	[ VoidSymbol ]
    };
    // AE12 = alt, see modifiers

    // top row, left side
    key <AD01> {
        [ q, Q, atilde, Atilde ],
	[ Tab, ISO_Left_Tab ]
    };
    key <AD02> {
        [ w, W, aring, Aring ],
        [ Escape ]
    };
    key <AD03> {
        [ e, E, eacute, Eacute ],
        [ Up ]
    };
    key <AD04> {
        [ r, R, ecircumflex, Ecircumflex ],
        [ Return ]
    };
    key <AD05> {
        [ t, T ],
	[ VoidSymbol ]
    };

    // top row, right side
    key <AD06> {
        [ y, Y ],
	[ comma ]
    };
    key <AD07> {
        [ u, U, uacute, Uacute ],
	[ period ]
    };
    key <AD08> {
        [ i, I, iacute, Iacute ],
        [ asterisk ]
    };
    key <AD09> {
        [ o, O, oacute, Oacute ],
        [ slash ]
    };
    key <AD10> {
        [ p, P ],
        [ plus ]
    };
    key <AD11> {
        [ dollar, numbersign ],
        [ equal ]
    };
    key <AD12> {
        [ grave, VoidSymbol ],
	[ grave ]
    };
    // unused
    key <BKSL> {
        [ VoidSymbol, VoidSymbol ],
	[ VoidSymbol ]
    };

    // home row, left side
    key <AC01> {
        [ a, A, aacute, Aacute ],
        [ BackSpace ]
    };
    key <AC02> {
        [ s, S, agrave, Agrave ],
        [ Left ]
    };
    key <AC03> {
        [ d, D, degree, VoidSymbol ],
        [ Down ]
    };
    key <AC04> {
        [ f, F ],
        [ Right ]
    };
    key <AC05> {
        [ g, G ],
	[ Delete ]
    };

    // home row, right side
    key <AC06> {
        [ h, H ],
        [ 0 ]
    };
    key <AC07> {
        [ j, J ],
        [ 1 ]
    };
    key <AC08> {
        [ k, K ],
        [ 2 ]
    };
    key <AC09> {
        [ l, L, otilde, Otilde ],
        [ 3 ]
    };
    key <AC10> {
        [ quotedbl, apostrophe, ocircumflex, Ocircumflex ],
        [ 4 ]
    };
    key <AC11> {
        [ minus, underscore ],
        [ minus ]
    };

    // bottom row, left side
    // unused (absent in 101-key keyboards)
    key <LSGT> {
        [ VoidSymbol, VoidSymbol ],
	[ VoidSymbol ]
    };
    key <AB01> {
        [ z, Z, ae, AE ],
	[ VoidSymbol ]
    };
    key <AB02> {
        [ x, X, acircumflex, Acircumflex ],
	// PgUp
	[ Prior ]
    };
    key <AB03> {
        [ c, C, ccedilla, Ccedilla ],
	// PgDown
        [ Next ]
    };
    key <AB04> {
        [ v, V ],
        [ Insert ]
    };
    key <AB05> {
        [ b, B ],
	[ VoidSymbol ]
    };

    // bottom row, right side
    key <AB06> {
        [ n, N ],
        [ 5 ]
    };
    key <AB07> {
        [ m, M, emdash, endash ],
        [ 6 ]
    };
    key <AB08> {
        [ comma, semicolon ],
        [ 7 ]
    };
    key <AB09> {
        [ period, colon ],
        [ 8 ]
    };
    key <AB10> {
        [ equal, plus ],
        [ 9 ]
    };
    // unused (absent in 101-key keyboards)
    key <AB11> {
        [ VoidSymbol, VoidSymbol ],
	[ VoidSymbol ]
    };

    // using caps as backspace, backspace as caps
    key <CAPS> {
        type[Group1]="ONE_LEVEL",
        type[Group2]="ONE_LEVEL",
        symbols[Group1] = [ BackSpace ],
        symbols[Group2] = [ BackSpace ]
    };
    key <BKSP> {
        type[Group1]="ONE_LEVEL",
        type[Group2]="ONE_LEVEL",
        symbols[Group1] = [ Caps_Lock ],
        symbols[Group2] = [ Caps_Lock ]
    };
};

partial modifier_keys
xkb_symbols "modifiers" {

    // using altgr as ISO_Level3_Shift (Mod5)
    include "level3(ralt_switch)"

    // using menu as control
    key <MENU> {
        type = "ONE_LEVEL",
	repeat = off,
        symbols[Group1] = [ Control_R ],
        symbols[Group2] = [ Control_R ]
    //    symbols[Group1] = [ Super_R ],
    //    symbols[Group2] = [ Super_R ]
    };
    modifier_map Control { <MENU> };
    //modifier_map Mod4 { <MENU> };

    // using tlde and ae12 as alt
    key <TLDE> {
        type = "TWO_LEVEL",
	repeat = off,
        symbols[Group1] = [ Alt_L, Meta_L ], 
        symbols[Group2] = [ Alt_L, Meta_L ]
    };
    key <AE12> {
        type = "TWO_LEVEL",
	repeat = off,
        symbols[Group1] = [ Alt_R, Meta_R ], 
        symbols[Group2] = [ Alt_R, Meta_R ]
    };
    modifier_map Mod1 { <TLDE>, <AE12> };

    // using left alt as Mode_switch
    key <LALT> {
        type = "ONE_LEVEL",
	repeat = off,
        symbols[Group1] = [ Mode_switch ],
        symbols[Group2] = [ Mode_switch ]
    };
    modifier_map Mod3 { <LALT> };
};
